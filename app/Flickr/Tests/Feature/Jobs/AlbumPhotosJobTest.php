<?php

namespace App\Flickr\Tests\Feature\Jobs;

use App\Flickr\Tests\AbstractFlickrTest;
use App\Jobs\Flickr\AlbumPhotosJob;
use App\Models\FlickrAlbum;
use App\Models\FlickrContact;
use App\Models\FlickrPhoto;
use Illuminate\Support\Facades\Event;

class AlbumPhotosJobTest extends AbstractFlickrTest
{
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        Event::fake();
    }

    public function test_can_get_album_photos()
    {
        $this->mockSucceed();

        FlickrContact::factory()->create(['nsid' => '94529704@N02',]);

        $album = FlickrAlbum::factory()->create(['owner' => '94529704@N02',]);

        // Get photos of album
        AlbumPhotosJob::dispatch($album);
        $this->assertEquals(FlickrAlbum::STATE_PHOTOS_COMPLETED, $album->refresh()->state_code);

        $this->assertDatabaseHas('flickr_photos', [
            'id' => '44472585915',
            'owner' => '94529704@N02',
            'state_code' => FlickrPhoto::STATE_INIT
        ]);

        $this->assertDatabaseHas('flickr_photo_album', [
            'album_id' => $album->id,
            'photo_id' => '44472585915'
        ]);

        $this->assertEquals(1, $album->photos()->count());
        $this->assertEquals('44472585915', $album->photos()->first()->id);
    }

    public function test_cant_get_album_photos()
    {
        $this->mockFailed();

        $album = FlickrAlbum::factory()->create();

        AlbumPhotosJob::dispatch($album);
        $this->assertEquals(FlickrAlbum::STATE_PHOTOS_FAILED, $album->refresh()->state_code);
    }
}
